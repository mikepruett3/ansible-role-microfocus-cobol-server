---
- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yml"

- name: "Gather the package facts"
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts.packages is not defined

- name: "Install pax package"
  block:
    - name: "Install pax, if not already installed (RHEL7)"
      package:
        name: 'pax'
        state: present
      when:
        - "'pax' not in ansible_facts.packages"
        - ansible_os_family == 'RedHat'
        - ansible_distribution_major_version <= '7'
    - name: "Install pax, if not already installed (RHEL8)"
      package:
        name: 'spax'
        state: present
      when:
        - "'spax' not in ansible_facts.packages"
        - ansible_os_family == 'RedHat'
        - ansible_distribution_major_version == '8'

- name: "Disable SELinux"
  selinux:
    state: disabled
  register: reboot

- name: "Reboot host, after disabling SELinux"
  reboot:
  when: reboot.reboot_required

- name: "Install required library packages"
  block:
    - name: "Install required libraries, if not already installed (RHEL8)"
      package:
        name: "{{ item }}"
        state: present
      when:
        - "item|string not in ansible_facts.packages"
        - ansible_os_family == 'RedHat'
        - ansible_distribution_major_version == '8'
      with_items:
        - glibc.i686
        - libgcc.i686
        - libstdc++.i686
        - glibc-devel.i686

- name: "Setup Service Account"
  block:
    - name: "Check for groups existence"
      command: getent group {{ service_group }}
      ignore_error: true
      register: group
    #- name: "Create group, if not already created"
    #  ansible.builtin.group:
    #    name: "{{ service_group }}"
    #    state: present
    #  when: register:
      